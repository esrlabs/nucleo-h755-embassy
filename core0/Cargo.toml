[package]
name = "core0"
version = "0.1.0"
edition = "2021"

[dependencies]
embassy-stm32 = { version = "0.1.0", git = "https://github.com/esrlabs/embassy", features = [
    "defmt",
    "stm32h747zi-cm7",
    "time-driver-tim2",
    "unstable-pac",
    "chrono",
], branch = "feature/HSEM_SPI_FIX" }
embassy-sync = { version = "0.5.0", git = "https://github.com/esrlabs/embassy", features = [
    "defmt",
], branch = "feature/HSEM_SPI_FIX" }
embassy-executor = { version = "0.5.0", git = "https://github.com/esrlabs/embassy", features = [
    "task-arena-size-32768",
    "arch-cortex-m",
    "executor-thread",
    "defmt",
    "integrated-timers",
], branch = "feature/HSEM_SPI_FIX" }
embassy-time = { version = "0.3.0", git = "https://github.com/esrlabs/embassy", features = [
    "defmt",
    "defmt-timestamp-uptime",
    "tick-hz-32_768",
], branch = "feature/HSEM_SPI_FIX" }

defmt = "0.3"
defmt-rtt = "0.4"

cortex-m = { version = "0.7.6", features = [
    "inline-asm",
    "critical-section-single-core",
] }
cortex-m-rt = "0.7.0"
embedded-hal = "0.2.6"
embedded-hal-1 = { package = "embedded-hal", version = "1.0" }
embedded-hal-async = { version = "1.0" }
embedded-nal-async = { version = "0.7.1" }
embedded-io-async = { version = "0.6.1" }
panic-probe = { version = "0.3", features = ["print-defmt"] }
futures = { version = "0.3.17", default-features = false, features = [
    "async-await",
] }
heapless = { version = "0.8", default-features = false }
rand_core = "0.6.3"
critical-section = "1.1"
micromath = "2.0.0"
stm32-fmc = "0.3.0"
embedded-storage = "0.3.1"
static_cell = "2"
chrono = { version = "^0.4", default-features = false }
stm32h7hal-ext = { version = "0.1.0", path = "../stm32h7hal-ext" }
shared = { version = "0.1.0", path = "../shared" }

# [patch."https://github.com/esrlabs/embassy"]
# embassy-stm32 = { path = "../../embassy/embassy-stm32" }
# embassy-sync = { path = "../../embassy/embassy-sync" }
# embassy-executor = { path = "../../embassy/embassy-executor" }
# embassy-time = { path = "../../embassy/embassy-time" }

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 0
lto = false             # <-
overflow-checks = true  # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3           # <-
overflow-checks = true  # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3            # <-
overflow-checks = false  # <-
